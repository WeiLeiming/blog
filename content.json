[{"title":"iOS如何利用runtime向Category添加属性","date":"2017-02-05T06:56:14.000Z","path":"2017/02/05/iOS如何利用runtime向Category添加属性/","text":"Associated Objects 使用runtime需导入头文件 1#import &lt;objc/runtime.h&gt; 以下方法允许对象在运行时通过键关联任意值 12objc_getAssociatedObject(id object, const void *key);objc_setAssociatedObject(id object, const void *key, id value, objc_AssociationPolicy policy); Associative Object Behaviors 在runtime.h中的定义 123456789101112131415/** * Policies related to associative references. * These are options to objc_setAssociatedObject() */typedef OBJC_ENUM(uintptr_t, objc_AssociationPolicy) &#123; OBJC_ASSOCIATION_ASSIGN = 0, /**&lt; Specifies a weak reference to the associated object. */ OBJC_ASSOCIATION_RETAIN_NONATOMIC = 1, /**&lt; Specifies a strong reference to the associated object. * The association is not made atomically. */ OBJC_ASSOCIATION_COPY_NONATOMIC = 3, /**&lt; Specifies that the associated object is copied. * The association is not made atomically. */ OBJC_ASSOCIATION_RETAIN = 01401, /**&lt; Specifies a strong reference to the associated object. * The association is made atomically. */ OBJC_ASSOCIATION_COPY = 01403 /**&lt; Specifies that the associated object is copied. * The association is made atomically. */&#125;; 根据枚举类型objc_AssociationPolicy定义的行为，可以将值关联到对象上 Behavior @property Equivalent OBJC_ASSOCIATION_ASSIGN @property (assign) 或 @property (unsafe_unretained) OBJC_ASSOCIATION_RETAIN_NONATOMIC @property (nonatomic, strong) OBJC_ASSOCIATION_COPY_NONATOMIC @property (nonatomic, copy) OBJC_ASSOCIATION_RETAIN @property (atomic, strong) OBJC_ASSOCIATION_COPY @property (atomic, copy) 使用示例NSObject+AssociatedObject.h123@interface NSObject (AssociatedObject)@property (nonatomic, strong) id associatedObject;@end NSObject+AssociatedObject.m12345678910@implementation NSObject (AssociatedObject)@dynamic associatedObject;- (void)setAssociatedObject:(id)object &#123; objc_setAssociatedObject(self, @selector(associatedObject), object, OBJC_ASSOCIATION_RETAIN_NONATOMIC);&#125;- (id)associatedObject &#123; return objc_getAssociatedObject(self, @selector(associatedObject));&#125; 通常建议键是一个静态字符。 12static char kAssociatedObjectKey;objc_getAssociatedObject(self, &amp;kAssociatedObjectKey); 当然，存在一个简单得多的解决方案：只需使用selector。 更详细的参考请访问[Associated Objects]","tags":[{"name":"runtime","slug":"runtime","permalink":"http://loonkit.com/tags/runtime/"},{"name":"Category","slug":"Category","permalink":"http://loonkit.com/tags/Category/"},{"name":"iOS","slug":"iOS","permalink":"http://loonkit.com/tags/iOS/"}]},{"title":"写在2017开端","date":"2017-02-04T01:59:05.000Z","path":"2017/02/04/写在2017开端/","text":"2016过去的2016，是自己的本命年，也是自己毕业后在深圳度过的第一个完整年份。这一年，算是自己的一个转折之年，终于安定下来，这便是这一年最大的收获。 20172017年，是安心学习沉淀自己技术的一年，牢记。","tags":[{"name":"随笔","slug":"随笔","permalink":"http://loonkit.com/tags/随笔/"}]},{"title":"我的第一个博客发文","date":"2017-01-22T07:59:51.000Z","path":"2017/01/22/我的第一个博客发文/","text":"为了更好的明天 去年就想搭建自己的博客来总结自己的得失，却一直拖到现在。第一个博客采用了hexo，主题用的是yilia，在此感谢为此做出贡献的大神。以后会陆陆续续开始写博客，加油~","tags":[{"name":"随笔","slug":"随笔","permalink":"http://loonkit.com/tags/随笔/"}]},{"title":"Hello World","date":"2017-01-20T08:43:32.000Z","path":"2017/01/20/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","tags":[]}]